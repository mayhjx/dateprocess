Option Explicit

Dim fso
' Dim Instrname
Dim scriptpath, parampath, csvpath, poolpath
Dim xl, wb, ws
Dim wb_param
Dim wb_pool, ws_v7, ws_other
Dim table, data
Dim elem, item, param
Dim dic_x, dic_y
dim lastrow, lastcol

' 初始化
Const symbol = "元素符号"
Const unit = "单位"
Const upper = "上限"
Const limit = "定量限"
Const high = "高值"
Const low = "低值"
Const RSD = "最大允许RSD"
Const ALE = "最大允许误差"
Const digits = "小数位数"
Const QC1 = "QC1传输字符串"
Const QC2 = "QC2传输字符串"
const printTitle = "打印标题"
Const uploadpath = "上传模板路径"
Const pool = "汇总池路径"


Dim start
start = timer()
main
msgbox "耗时：" & round(timer-start,2) & " 秒"


Sub main()
	
	Set fso = createobject("scripting.filesystemobject")

	' 脚本名
	' Instrname =  split(fso.getfilename(wscript.scriptfullname), ".vbs")(0)
	
	' 该脚本路径
	scriptpath = fso.getparentfoldername(wscript.scriptfullname)
	
	' 项目参数表路径
	parampath = fso.buildpath(scriptpath, "项目参数.csv")
	
	If Not fso.fileexists(parampath) Then
		msgbox "项目参数文件不存在，请确认 " & parampath
		Set fso = Nothing
		Exit Sub
	End If
	
	' 获取原始数据工作表
	On Error Resume Next
	Set xl = GetObject(, "excel.application")
	Set wb = xl.activeworkbook
	Set ws = wb.activesheet
	' Set ws_run = wb.worksheets("Sheet2")
	On Error GoTo 0
	
	If isempty(xl) Then
		MsgBox "未打开Excel"
		Exit Sub
	End If
	
	If TypeName(wb) = "Nothing" Then
		MsgBox "未找到工作簿"
		xl.quit()
		Set xl = Nothing
		Exit Sub
	End If
	
	If isempty(ws) Then
		MsgBox "未找到工作表"
		set wb = nothing
		Set xl = Nothing
		Exit Sub
	End If
	

	FastWB True
	
	' ----------------------读取项目参数----------------------
	Set wb_param = xl.workbooks.open(parampath, , True)
	table = wb_param.worksheets(1).usedrange
	wb_param.close(False)
	Set wb_param = Nothing
	
	If Not isarray(table) Or ubound(table) = 1 Then
		msgbox "项目参数文件中无参数，请确认"
		Set xl = Nothing
		Exit Sub
	End If
	
	' 将项目数据读取到字典中
	set dic_x = createobject("scripting.dictionary")
	set dic_y = createobject("scripting.dictionary")
	dim i
	for i = 1 to ubound(xl.index(table,1))
		dic_y.add table(1,i), i
	next
	for i = 2 to ubound(table)
		dic_x.add table(i,1) & table(i,2), i
		if not dic_x.exists(table(i,1)&"All") then
			dic_x.add table(i,1)&"All", i  ' 一些共同参数（汇总池位置等）
		end if
	next
	
	' 根据文件名后缀判断项目
	Dim suffix 
	on error resume next
	suffix = split(split(wb.name, "-")(1), ".xls")(0)
	on error goto 0
	if isempty(suffix) then 
		msgbox "无法识别的项目，请确认文件名中是否包含项目简称"
		FastWB False
		erase table
		set dic_x = Nothing
		set dic_y = Nothing
		Set ws = Nothing
		Set wb = Nothing
		Set xl = Nothing
		Set fso = Nothing
		exit sub
	end if
	if isnumeric(suffix) then
		item = "V7" ' 如果文件名后缀为数字则默认为七项
	else
		item = suffix
	end if
	
	
	if isempty(dic_x(item&"All")) then
		msgbox "不存在 " & item & " 的项目参数，请确认"
		FastWB False
		erase table
		set dic_x = Nothing
		set dic_y = Nothing
		Set ws = Nothing
		Set wb = Nothing
		Set xl = Nothing
		Set fso = Nothing
		Exit Sub
	end if
	
	' 确认上传模板和汇总池路径是否存在
	csvpath = split(cstr(get_param(table, item, "All", uploadpath)), ";")
	poolpath = cstr(get_param(table, item, "All", pool))
	
	With fso
		For i = 0 To ubound(csvpath)
			If Not .fileexists(csvpath(i)) Then
				msgbox "未找到上传模板文件，请确认路径 " & csvpath(i)
				FastWB False
				Set ws = Nothing
				Set wb = Nothing
				Set xl = Nothing
				Set fso = Nothing
				Exit Sub
			End If
		Next
		If Not .folderexists(poolpath) Then
			msgbox "汇总池路径不存在,请确认 " & poolpath
			FastWB False
			Set ws = Nothing
			Set wb = Nothing
			Set xl = Nothing
			Set fso = Nothing
			Exit Sub
		End If
	End With
	
	' ------------------程序开始------------------ 
	Dim path
	Dim today
	today = year(date) & right(0&month(date),2) & right(0&day(date),2)
	
	' 新建汇总池文件夹
	With fso
		path = .buildpath(poolpath, left(today,4))
		If Not .folderexists(path) Then
			.createfolder(path)
		End If
		path = .buildpath(path, left(today,6))
		If Not .folderexists(path) Then
			.createfolder(path)
		End If
	End With
	
	' 汇总池工作表名称
	Dim v7, other 
	v7 = right(today,4)
	other = "杂项"
	
	' 打开汇总池工作簿
	On Error Resume Next
	Set wb_pool = xl.Workbooks.Open(path & "\总" & today)
	Set ws_v7 = wb_pool.worksheets(v7)
	Set ws_other = wb_pool.worksheets(other)
	On Error GoTo 0
	
	' 新建汇总池工作簿
	If isempty(wb_pool) Then
		xl.workbooks.add
		xl.activeworkbook.saveas path & "\总" & today
		Set wb_pool = xl.activeworkbook
	End If
	If isempty(ws_v7) Then
		wb_pool.worksheets(1).name = v7
		Set ws_v7 = wb_pool.worksheets(v7)
	End If
	If isempty(ws_other) Then
		wb_pool.worksheets.add , wb_pool.worksheets(1)
		wb_pool.activesheet.name = other
		Set ws_other = wb_pool.worksheets(other)
	End If
	
	If wb_pool.readonly Then
		msgbox "汇总池已在其他电脑打开，请先关闭"
		wb_pool.close(False)
		FastWB False
		erase table
		set dic_x = Nothing
		set dic_y = Nothing
		Set ws_v7 = Nothing
		Set ws_other = Nothing
		Set wb_pool = Nothing
		Set ws = Nothing
		Set wb = Nothing
		Set xl = Nothing
		Set fso = Nothing
		Exit Sub
	End If
	
	data_process ws
	
	wb.save
	
	wb_pool.close(True)
	
	FastWB False
	
	erase data
	erase table
	
	set dic_x = Nothing
	set dic_y = Nothing
	Set ws_v7 = Nothing
	Set ws_other = Nothing
	Set wb_pool = Nothing
	Set ws = Nothing
	Set wb = Nothing
	Set xl = Nothing
	Set fso = Nothing
	
End Sub


Sub data_process(ByRef ws)
	
	Dim r, c
	
	With ws
	
		data = .usedrange
		if not isarray(data) then
			' msgbox "未找到数据"
			exit sub
		end if
		
		If data(1,1) <> "Sample" Then Exit Sub
		
		lastrow = ubound(data)
		lastcol = ubound(xl.index(data,1))
	
		.range("A1").resize(lastrow, lastcol).clear
		.range("A1").resize(lastrow, lastcol) = data
		
		For c = lastcol To 1 Step -1
			' 删除内标列，多余列
			If instr(data(2,c), "ISTD") Then
				.columns(c).delete
			ElseIf instr(data(2,c), "Rjct") Then
				.columns(c).delete
			ElseIf len(data(2,c)) = 0 Then
				.columns(c).delete
			ElseIf len(data(1,c)) > 0 Then
				' 删除参数表中没有的项目列（浓度列和RSD列）
				elem = data(1,c)
				If isempty(get_param(table, item, elem, symbol)) Then
					.columns(c).delete
					.columns(c).delete
				End If
			End If
		Next 
		
		' '  删除空白行，最后一列为空则删除整行
		For r = lastrow To 2 Step -1
			If len(data(r, lastcol)) = 0 Then
				.rows(r).delete
			End If
		Next
		
		
		' 因为删除了某些行和列，需重新取列表
		data = .usedrange
		lastrow = ubound(data)
		lastcol = ubound(xl.index(data,1))
		
		
		' 判断RSD
		dim theRSD
		For c = lastcol To 2 Step -1
			elem = data(1,c-1)
			theRSD = get_param(table, item, elem, RSD)
			If instr(data(2,c), "RSD") and not isempty(theRSD) Then
				For r = 2 To lastrow
					If isnumeric(data(r,c)) Then
						If data(r,c) > theRSD or data(r,c) = "" Then
							.cells(r,c-1).font.bold = True
						End If
					End If
				Next
				.columns(c).delete
			End If
		Next 
		
		If item = "V7" Then
			' 将V7的Ca放到最后一列
			.columns("C").cut
			.columns("I").insert
		End If 
		
		If data(2,1) = "Data File" Then .rows(2).delete
		
		' 因为删除了某些行和列，需重新取列表
		data = .usedrange
		lastrow = ubound(data)
		lastcol = ubound(xl.index(data,1))
		
		
		On Error Resume Next
		Dim samplename
		' 如果参数表中未设置曲线浓度，则删除曲线
		For r = lastrow To 2 Step -1
			samplename = data(r,1)
			If instr(samplename, "STD") Then
				If isempty(get_param(table, item, "All", samplename)) Then
					.rows(r).delete
				End If
			End If
		Next 

		
		' 因为删除了某些行和列，需重新取列表
		data = .usedrange
		lastrow = ubound(data)
		lastcol = ubound(xl.index(data,1))
		
		
		Dim up, down, digit
		For c = 2 To lastcol
			elem = data(1,c)
			' 小数位数
			digit = get_param(table, item, elem, digits)
			' 上下限
			up = get_param(table, item, elem, upper)
			down = get_param(table, item, elem, limit)
			
			For r = lastrow To 2 Step -1
				samplename = data(r,1)		
				' 曲线回收率
				If instr(samplename, "STD") Then
					If instr(samplename, "STD0")=0 And isnumeric(data(r,c))Then
						data(r,c) = data(r,c) / get_param(table, item, elem, samplename)
						If data(r,c) > 1.15 Or data(r,c) < 0.85 Then
							.cells(r,c).interior.colorindex = 17
						End If
						.cells(r,c).numberformat = "0%" 
					End If
				elseIf instr(samplename, "QC") Then
					' QC保留两位小数
					data(r,c) = round(data(r,c),2)
				Else
					' 样品保留小数位数
					If Not isempty(digit) then data(r,c) = round(data(r,c), digit)
					' 转换上下限
					If Not isempty(up) And isnumeric(data(r,c)) And data(r,c) > up Then
						data(r,c) = ">" & up
					ElseIf Not isempty(down) And data(r,c) < down Then
						data(r,c) = "<" & down
					End If
				End If
			Next 
		Next 
		
		' ' 修改标题行为元素符号+单位
		For c = 2 To lastcol
			elem = data(1,c)
			data(1,c) = get_param(table, item, elem, symbol) + _
			"(" + get_param(table, item, elem, unit) + ")"
		Next 
		

		' ' 高低值显色（曲线质控不显颜色）
		Const xland = 1
		Const xlor = 2
		For c = 2 To lastcol
			elem = data(1,c)
			.range("A1").autofilter c, ">=" & get_param(table, item, elem, high), _
			xlor, "<=" & get_param(table, item, elem, low)
			.range("A1").autofilter 1, "<>*QC*", xland, "<>*STD*"
			.range("A2:A" & lastrow).offset(0,c-1).specialcells(12).interior.colorindex = 17
			.range("A1").autofilter
		Next
		
		' 将列表粘贴到工作表
		.usedrange = data
		
		' 排序曲线和质控
		Const xlSortOnFontColor = 2
		Const xlAscending = 1
		Const xlSortNormal = 0
		Const xlyes = 1
		Const xlTopToButtom = 1
		Const xlPinYin = 1
		
		.Range("A1").AutoFilter 1, "=STD*", xlOr, "=*QC*"
		.usedrange.SpecialCells(12).Font.Color = 255
		.Range("A1").AutoFilter
		
		.Sort.SortFields.Clear
		.Sort.SortFields.Add(.Range("A1:A" & lastrow), _
		xlSortOnFontColor, xlAscending, , xlSortNormal).SortOnValue.Color = RGB(255, 0, 0)
		With .Sort
			.SetRange ws.usedrange
			.Header = xlyes
			.MatchCase = False
			.Orientation = xlTopToButtom
			.SortMethod = xlPinYin
			.Apply
		End With
		.Sort.SortFields.Clear
		.usedrange.Font.ColorIndex = 0
		On Error GoTo 0
		
		
		' 设置行高和列宽
		.usedrange.ColumnWidth = 10.38
		If lastrow > 71 Then
			.usedrange.RowHeight = 10.25
		ElseIf lastrow > 67 Then
			.usedrange.RowHeight = 10.75
		ElseIf lastrow > 64 Then
			.usedrange.RowHeight = 11.5
		Elseif lastrow > 59 Then
			.usedrange.RowHeight = 11.75
		else
			.usedrange.RowHeight = 12.75
		End If
		
		' 实验号靠左，数据居中显示
		Const xlCenter = -4108
		Const xlleft = -4131
		.usedrange.VerticalAlignment = xlCenter
		.usedrange.HorizontalAlignment = xlCenter
		.columns(1).HorizontalAlignment = xlleft
		
		' xl.ActiveWindow.SmallScroll -150
		
		' 设置页眉页脚
		xl.PrintCommunication = False
		With .PageSetup
			.CenterHeader = "&D " & get_param(table, item, "All", printTitle) & "结果"
			.LeftFooter = "操作："
			.RightFooter = "□已点_________□已审_________□审批_________ "
			.PrintGridlines = True
		End With
		xl.PrintCommunication = true
		
		data = .usedrange
		
		data_to_csv data
		
		' 判断V7结果是否两两相同
		if item = "V7" then SameOrNot data
		
		data_to_pool data
		
		.usedrange = data
		
		' Dim PrintOrNot
		' PrintOrNot = MsgBox("是否打印数据?", 4, "提示")
		' If PrintOrNot = 6 Then .usedrange.printout
		
	End With
	
End Sub


sub SameOrNot(byref data)
	
	' 判断七项结果是否两两相同
	
	dim r, i
	dim same
	dim Mg, Mn, Fe, Cu, Zn, Pb, Ca
	
	mg = xl.index(data, ,2)
	mn = xl.index(data, ,3)
	fe = xl.index(data, ,4)
	cu = xl.index(data, ,5)
	zn = xl.index(data, ,6)
	pb = xl.index(data, ,7)
	ca = xl.index(data, ,8)
	
	For r = 2 To lastrow - 1
        For i = r + 1 To lastrow
            same = 0
			If InStr(data(r, 1), "QC") = 0 And InStr(data(r, 1), "STD") = 0 Then
				on error resume next
				if abs(mg(i,1) - mg(r,1)) < 0.03 * mg(r,1) then same = same + 1
				if abs(mn(i,1) - mn(r,1)) < 1 then same = same + 1
				if abs(fe(i,1) - fe(r,1)) < 0.03 * fe(r,1) then same = same + 1
				if abs(cu(i,1) - cu(r,1)) < 0.03 * cu(r,1) then same = same + 1
				if abs(zn(i,1) - zn(r,1)) < 0.03 * zn(r,1) then same = same + 1
				if abs(pb(i,1) - pb(r,1)) < 5 then same = same + 1
				if abs(ca(i,1) - ca(r,1)) < 0.03 * ca(r,1) then same = same + 1
				on error goto 0
			end if
			
			If same = 7 Then
				data(r, 1) = data(r, 1) & "○"
				data(i, 1) = data(i, 1) & "○"
			End If
        Next
    Next
	
end sub


Sub data_to_csv(Byref data)
	
	' 将数据粘贴到上传模板csv文件中
	
	Dim r, i
	Dim wb_csv, ws_csv
	
	' QC传输字符串设置
	dim QC1code, QC2code
	
	QC1code = get_param(table, item, "All", QC1)
	QC2code = get_param(table, item, "All", QC2)
	
	if Not isempty(QC1code) and Not isempty(QC2code) then
		For r = 2 To lastrow
			If instr(data(r,1), "QC1") Then
				data(r,1) = QC1code
			elseIf instr(data(r,1), "QC2") Then
				data(r,1) = QC2code
			End If
		Next
	end if
	
	dim csvtitle ' 存取csv首行
	
	' 打开上传模板
	For i = 0 To ubound(csvpath)
		On Error Resume Next
		Set wb_csv = xl.Workbooks.Open(csvpath(i))
		Set ws_csv = wb_csv.worksheets(1)
		On Error GoTo 0
		If isempty(wb_csv) Then
			msgbox "无法打开上传模板，请确认路径 " & csvpath(i)
			Exit Sub
		End If
		
		with ws_csv
			csvtitle = .range("A1").resize(1,lastrow)
			.cells.clear
			.range("A1").resize(1,lastrow) = csvtitle
			.range("A2").resize(lastrow, lastcol) = data
		end with
		
		wb_csv.close(True)
	Next
	
	set wb_csv = nothing
	set ws_csv = nothing
	
End Sub



Sub data_to_pool(Byref data)
	
	' 将数据粘贴到汇总池
	
	Dim usedrow 
	Dim to_ws
	
	If item = "V7" Then
		Set to_ws = ws_v7
	Else
		Set to_ws = ws_other
	End If
	
	with to_ws
		usedrow = .usedrange.rows.count
		
		If usedrow = 1 Then
			.range("A1").resize(lastrow, lastcol) = data
			.range("A1") = time
		Else
			.range("A" & usedrow+1).resize(lastrow, lastcol) = data
			.range("A" & usedrow+1) = time
		End If
	end with
	
	Set to_ws = Nothing
	
	
End Sub


Function get_param(ByRef table, ByVal item, ByVal elem, ByVal param)
	
	' item: 项目简称
	' elem: 元素符号
	' param: 参数名称
	
	' 功能：获取指定的项目和元素的参数信息
	' 若无参数信息则返回 Empty
	
	dim x, y, i, k
	
	if elem = "All" then
		x = dic_x(item&"All")
	else
		for i = 2 to ubound(table)
			if instr(elem, table(i,2)) then
				elem = table(i,2)
				x = dic_x(item&elem)
				exit for
			end if
		next
	end if
	
	for each k in dic_y.keys
		if instr(param, k) then
			y = dic_y(k)
			exit for
		end if
	next
	
	' msgbox "X" & x & ",Y" & y
	on error resume next
	get_param = table(x, y)
	on error goto 0
	
End Function


Public Sub FastWB(ByVal opt)
	With xl
		' If opt Then	
			' .calculation = -4135 ' xlCalculationManual
		' Else
			' .calculation = -4105 ' xlCalculationAutomatic
		' End If
		If .DisplayAlerts <> Not opt Then .DisplayAlerts = Not opt
		' If .DisplayStatusBar <> Not opt Then .DisplayStatusBar = Not opt
		' If .EnableAnimations <> Not opt Then .EnableAnimations = Not opt
		' If .EnableEvents <> Not opt Then .EnableEvents = Not opt
		If .ScreenUpdating <> Not opt Then .ScreenUpdating = Not opt
	End With
	' FastWS ws, opt
End Sub


Public Sub FastWS(ByRef ws, ByVal opt)
	If ws Is Nothing Then
		ws = xl.activeworkbook.activesheet
		OptimiseWS ws, opt
	Else
		OptimiseWS ws, opt
	End If
	' If ws Is Nothing Then
	' For Each ws In Application.ThisWorkbook.Sheets
	' OptimiseWS ws, opt
	' Next
	
	' Else
	' OptimiseWS ws, opt
	' End If
End Sub

Private Sub OptimiseWS(ByVal ws, ByVal opt)
	With ws
		.DisplayPageBreaks = Not opt
		.EnableCalculation = Not opt
		.EnableFormatConditionsCalculation = Not opt
		.EnablePivotTable = Not opt
	End With
End Sub





